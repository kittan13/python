################################3
##        list      ##########3###
##############################

l = [1,3,5,7,1,6,4]
print(l)


#list名[インデックス番号]で対象の箇所の部分だけ抽出
print(l[0])

#[インデックス番号]に - をつけると、後ろから抽出される。
print(l[-1])

#引数に : で区切ってやると。["A":"B"]　AからBまでのインデックス番号が抽出される。
print(l[0:2])
print(l[3:5])

#引数を : で区切り、かつ最初や最後を指定しないと、そこからと、そこまでとなる。
print(l[:3])
print(l[5:])

#[::"何個飛ばしか"]とすると、例えば、2個飛ばしで配列を抽出することができる。
print(l[::2])


#len()とすると、配列の長さがわかる。
print(len(l))



#上記のようにしなくても、あまりないがaに格納されたようにして、文字列を配列にすることもできる。
c = ["a","b", "c"]
print(c)

a = list("hfjho")
print(a)

"""
int型はlist()を使い、配列にすることはできない。
b = list(6473782)
print(b)
"""


#配列に中に配列があるという構造(ネスト)の場合
x = ["a", "b", "c"]
y = [1, 2, 3]
z =[x,y]
print(z)

#リストの扱いと同様に、引数でインデックス番号を指定した後に、さらに、インデックス番号を指定すると、リストの中のリスト(=ネスト)と抽出することができる。
print(z[0])
print(z[0][1])